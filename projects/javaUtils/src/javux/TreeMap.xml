<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:class xmlns:ns2="http://testful.sourceforge.net/schema/2.0/testful.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns4="http://testful.sourceforge.net/schema/2.0/behavioral.xsd" >    <cluster>
        <class>java.lang.Object</class>
        <class>java.lang.String</class>
        <class>java.util.Comparator</class>
        <class>javux.Collection</class>
        <class>javux.Map$Entry</class>
        <class>javux.NavigableMap</class>
        <class>javux.NavigableSet</class>
        <class>javux.Set</class>
        <class>javux.SortedMap</class>
    </cluster>
    <constructor maxExecTime="500" skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.util.Comparator"/>
    </constructor>
    <constructor maxExecTime="500" skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="javux.Map"/>
        <extra xsi:type="ns4:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p0.isEmpty()" />
       	</extra>
    </constructor>
    <constructor maxExecTime="500" skip="false">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="javux.SortedMap"/>
        <extra xsi:type="ns4:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p0.isEmpty()" />
       	</extra>
    </constructor>
    <constructor maxExecTime="500" skip="false" />
    
    <method kind="pure" exposeState="false" maxExecTime="500" name="ceilingEntry">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="ceilingKey">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="floorEntry">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="floorKey">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="higherEntry">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="higherKey">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="lowerEntry">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="lowerKey">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    
    <method kind="mutator" exposeState="false" maxExecTime="500" name="clear"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="clone"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="comparator"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="containsKey">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
		<extra xsi:type="ns4:behavior">
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
		</extra>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="containsValue">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.values()}" />
        </extra>
    </method>
    <method kind="pure" exposeState="true" maxExecTime="500" name="descendingKeySet"  />
    <method kind="pure" exposeState="true" maxExecTime="500" name="descendingMap"  />
    <method kind="pure" exposeState="true"  maxExecTime="500" name="entrySet"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="equals">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="java.lang.Object"/>
    </method>
    <method kind="pure" exposeState="false" maxExecTime="500" name="firstEntry"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="firstKey"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="get">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" />
    </method>
    <method kind="observer" exposeState="false" maxExecTime="500" name="hashCode"  />
    
    <method kind="pure" exposeState="true" maxExecTime="500" name="headMap">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
	        <abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p1" />
        </extra>
    </method>
    <method kind="pure" exposeState="true" maxExecTime="500" name="headMap">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    
    <method kind="observer" exposeState="false" maxExecTime="500" name="isEmpty"  />
    <method kind="pure" exposeState="true" maxExecTime="500" name="keySet"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="lastEntry"  />
    <method kind="pure" exposeState="false" maxExecTime="500" name="lastKey"  />
    <method kind="pure" exposeState="true" maxExecTime="500" name="navigableKeySet"  />
    <method kind="mutator" exposeState="false" maxExecTime="500" name="pollFirstEntry"  />
    <method kind="mutator" exposeState="false" maxExecTime="500" name="pollLastEntry"  />
    <method kind="mutator" exposeState="false" maxExecTime="500" name="put">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p1" parameters="{this.values()}" />
        </extra>
    </method>
    <method kind="mutator" exposeState="false" maxExecTime="500" name="putAll">
        <parameter exchangeStateWith="" exposedByReturn="false" captured="true" mutated="true" type="javux.Map"/>
        <extra xsi:type="ns4:behavior">
        	<abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p0.isEmpty()" />
       	</extra>
    </method>
    <method kind="mutator" exposeState="false" maxExecTime="500" name="remove">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="observer" exposeState="false" maxExecTime="500" name="size"  />
    <method kind="pure" exposeState="true" maxExecTime="500" name="subMap">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
	        <abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p1" />
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p2" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p2, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p2, this.lastKey())" />
	        <abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p3" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, p2)" />
        </extra>
    </method>
    <method kind="pure" exposeState="true" maxExecTime="500" name="subMap">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p1" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p1, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p1, this.lastKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, p1)" />
        </extra>
    </method>
    <method kind="pure" exposeState="true" maxExecTime="500" name="tailMap">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <parameter exchangeStateWith="" exposedByReturn="false" captured="false" mutated="false" type="boolean"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
	        <abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="p1" />
        </extra>
    </method>
    <method kind="pure" exposeState="true" maxExecTime="500" name="tailMap">
        <parameter exchangeStateWith="" exposedByReturn="true" captured="true" mutated="true" type="java.lang.Object"/>
        <extra xsi:type="ns4:behavior" >
			<abstraction function="testful.coverage.behavior.AbstractorRefCtx" expression="p0" parameters="{this.keySet()}" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.firstKey())" />
        	<abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(p0, this.lastKey())" />
        </extra>
    </method>
    <method kind="observer" exposeState="false" maxExecTime="500" name="toString"  />
    <method kind="pure" exposeState="true" maxExecTime="500" name="values"  />
    
    <extra xsi:type="ns4:behavior">
        <abstraction function="testful.coverage.behavior.AbstractorBoolean" expression="this.isEmpty()" />
        <abstraction function="testful.coverage.behavior.AbstractorNumber" expression="tful.GenericComparator.cmp(this.firstKey(), this.lastKey())" />
    </extra>
</ns2:class>
